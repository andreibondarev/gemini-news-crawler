<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>RubyFlow</title>
    <description>The Ruby and Rails community linklog</description>
    <link>https://rubyflow.com</link>
    <item>
      <title>RedisQueuedLocks [major 1.1.0 release] </title>
      <description> &lt;a href="https://github.com/0exp/redis_queued_locks" rel="nofollow"&gt;https://github.com/0exp/redis_queued_locks&lt;/a&gt; </description>
      <pubDate>Thu, 04 Apr 2024 08:30:00 +0000</pubDate>
      <link>https://rubyflow.com/p/n9mhiw-redisqueuedlocks-major-release-</link>
      <guid>https://rubyflow.com/p/n9mhiw-redisqueuedlocks-major-release-</guid>
    </item>
    <item>
      <title>AnyCable v1.5: simplified pub/sub, whispering and more</title>
      <description> &lt;a href="https://docs.anycable.io/release_notes?id=_150" rel="nofollow"&gt;This release&lt;/a&gt;’s major highlight is singed (and public) streams: skip channel classes and connect to your data streams directly (and securely), progressively enhance your application with bi-directional realtime features only when necessary (not so often). </description>
      <pubDate>Wed, 03 Apr 2024 23:54:57 +0000</pubDate>
      <link>https://rubyflow.com/p/zw6btc-anycable-v15-simplified-pubsub-whispering-and-more</link>
      <guid>https://rubyflow.com/p/zw6btc-anycable-v15-simplified-pubsub-whispering-and-more</guid>
    </item>
    <item>
      <title>Streamlined Syntax - Unveiling the Power of Slim Template Language</title>
      <description> &lt;a href="https://www.shakacode.com/blog/streamlined-syntax-unveiling-the-power-of-slim-template-language/" rel="nofollow"&gt;https://www.shakacode.com/blog/streamlined-syntax-unveiling-the-power-of-slim-template-language/&lt;/a&gt; </description>
      <pubDate>Wed, 03 Apr 2024 17:47:03 +0000</pubDate>
      <link>https://rubyflow.com/p/c9d6jg-streamlined-syntax-unveiling-the-power-of-slim-template-language</link>
      <guid>https://rubyflow.com/p/c9d6jg-streamlined-syntax-unveiling-the-power-of-slim-template-language</guid>
    </item>
    <item>
      <title>Live reload a Rails 7 application, an unsatisfaying attempt</title>
      <description> Livereload a Rails app on your local machine is still not available natively. Maybe in next version of Rails, but not yet. </description>
      <pubDate>Wed, 03 Apr 2024 06:18:50 +0000</pubDate>
      <link>https://rubyflow.com/p/rrwzsa-live-reload-a-rails-7-application-an-unsatisfaying-attempt</link>
      <guid>https://rubyflow.com/p/rrwzsa-live-reload-a-rails-7-application-an-unsatisfaying-attempt</guid>
    </item>
    <item>
      <title>Outgrowing Heroku: An AWS Migration Story</title>
      <description> Facing Heroku’s limitations during their Black Friday frenzy, TeePublic moved their Rails monolith to Amazon ECS. This story &lt;a href="https://judoscale.com/blog/heroku-to-aws-migration" rel="nofollow"&gt;details their journey&lt;/a&gt;, including the why, how, and impressive results of the migration. (Spoiler: it was a game-changer) </description>
      <pubDate>Tue, 02 Apr 2024 17:33:02 +0000</pubDate>
      <link>https://rubyflow.com/p/uzyq7h-outgrowing-heroku-an-aws-migration-story</link>
      <guid>https://rubyflow.com/p/uzyq7h-outgrowing-heroku-an-aws-migration-story</guid>
    </item>
    <item>
      <title>Happy 4th Birthday, Bridgetown!</title>
      <description> Four years ago today, &lt;a href="https://www.bridgetownrb.com/news/happy-birthday-bridgetown/" rel="nofollow"&gt;the Bridgetown publishing framework was born&lt;/a&gt;, the first public website launch and release of Bridgetown 0.10 happened a few weeks later, and the rest as they say is history. As always, a &lt;strong&gt;hearty thank you&lt;/strong&gt; to all our sponsors and 70+ contributors who have helped this open source project flourish in ways I never could have imagined. </description>
      <pubDate>Tue, 02 Apr 2024 16:20:11 +0000</pubDate>
      <link>https://rubyflow.com/p/wtk32j-happy-4th-birthday-bridgetown</link>
      <guid>https://rubyflow.com/p/wtk32j-happy-4th-birthday-bridgetown</guid>
    </item>
    <item>
      <title>Series of Interviewing blog posts</title>
      <description> My fellow Rubyists, I know this isn’t the most Ruby of all posts (except for the FizzBuzz example) but I’ve seen many people make simple mistakes during hiring processes. And I want to help fix that, so I’ve written a series of posts geared towards programmers about interviewing that I hope y’all will find helpful! </description>
      <pubDate>Tue, 02 Apr 2024 14:03:13 +0000</pubDate>
      <link>https://rubyflow.com/p/usrcxd-series-of-interviewing-blog-posts</link>
      <guid>https://rubyflow.com/p/usrcxd-series-of-interviewing-blog-posts</guid>
    </item>
    <item>
      <title>Rails on AWS book</title>
      <description> Do you feel discomfort when connecting an AWS service with a Rails application because of unclear pricing rules, complex permissions, or advanced networking configuration? I felt this way for a long time until I dedicated myself entirely to learning AWS. With this book, you can master AWS in a short amount of time without spending months getting certified - &lt;a href="https://mastermind.dev/books/rails-on-aws" rel="nofollow"&gt;Get the book now&lt;/a&gt; </description>
      <pubDate>Tue, 02 Apr 2024 13:20:27 +0000</pubDate>
      <link>https://rubyflow.com/p/ngumln-ruby-on-aws-book</link>
      <guid>https://rubyflow.com/p/ngumln-ruby-on-aws-book</guid>
    </item>
    <item>
      <title>Level Up Your Ruby Code with Draper Decorators</title>
      <description> &lt;a href="https://www.shakacode.com/blog/level-up-your-ruby-code-with-draper-decorators/" rel="nofollow"&gt;https://www.shakacode.com/blog/level-up-your-ruby-code-with-draper-decorators/&lt;/a&gt; </description>
      <pubDate>Tue, 02 Apr 2024 06:01:41 +0000</pubDate>
      <link>https://rubyflow.com/p/v780kv-level-up-your-ruby-code-with-draper-decorators</link>
      <guid>https://rubyflow.com/p/v780kv-level-up-your-ruby-code-with-draper-decorators</guid>
    </item>
    <item>
      <title>HOTWire &amp; Turbo Tutorial: Animated Deletions and Insertions</title>
      <description> With the addition of the new Todo form appearing at the bottom of the Todos, and the delete action removing a Todo, we have a very functional app. It would be nice if those additions and removals had a little animation to emphasize what’s happening on the page. If there was a long list, we might miss the deletion, especially if a network request caused a delay in the removal of the Todo. We can hook into Turbo streams, and run some animations on these actions to make them appear and disappear.
&lt;a href="https://onrails.blog/2024/04/01/hotwire-turbo-tutorial-animated-deletions-and-insertions/" rel="nofollow"&gt;https://onrails.blog/2024/04/01/hotwire-turbo-tutorial-animated-deletions-and-insertions/&lt;/a&gt; </description>
      <pubDate>Mon, 01 Apr 2024 23:08:01 +0000</pubDate>
      <link>https://rubyflow.com/p/j1sol6-hotwire-turbo-tutorial-animated-deletions-and-insertions</link>
      <guid>https://rubyflow.com/p/j1sol6-hotwire-turbo-tutorial-animated-deletions-and-insertions</guid>
    </item>
    <item>
      <title>Clean up Your Messy Legacy Ruby on Rails Codebase With Rubocop</title>
      <description> Setting up Rubocop on a new Rails application will get you on the path towards a well-maintained codebase. But what if you have an older project? </description>
      <pubDate>Mon, 01 Apr 2024 13:14:06 +0000</pubDate>
      <link>https://rubyflow.com/p/21ob7r-clean-up-your-messy-legacy-ruby-on-rails-codebase-with-rubocop</link>
      <guid>https://rubyflow.com/p/21ob7r-clean-up-your-messy-legacy-ruby-on-rails-codebase-with-rubocop</guid>
    </item>
    <item>
      <title>Super Fast Rails</title>
      <description> Most of the time, optimizing a Rails application requires repeating the same techniques. For example, at the database layer, it’s about creating the proper indexes, preventing 1+N queries, etc. Could we do that automatically? &lt;a href="https://www.rorvswild.com/blog/2024/super-fast-rails" rel="nofollow"&gt;https://www.rorvswild.com/blog/2024/super-fast-rails&lt;/a&gt; </description>
      <pubDate>Mon, 01 Apr 2024 07:13:45 +0000</pubDate>
      <link>https://rubyflow.com/p/zn6enk-super-fast-rails</link>
      <guid>https://rubyflow.com/p/zn6enk-super-fast-rails</guid>
    </item>
    <item>
      <title>[gem] Redis-based distributed locks with "acquisition queue" capabilities</title>
      <description> New gem (&lt;a href="https://github.com/0exp/redis_queued_locks" rel="nofollow"&gt;https://github.com/0exp/redis_queued_locks&lt;/a&gt;) [RedisQueuedLocks] that provides distributed redis-based locks with "lock acquisition" ordered queue capabilites and depends on pre-configured RedisClient istance (Reidis infrastracture layer you should provide by yourself) </description>
      <pubDate>Sun, 31 Mar 2024 22:03:16 +0000</pubDate>
      <link>https://rubyflow.com/p/n6skip-gem-redis-based-distributed-locks-with-acquisition-queue-capabilities</link>
      <guid>https://rubyflow.com/p/n6skip-gem-redis-based-distributed-locks-with-acquisition-queue-capabilities</guid>
    </item>
    <item>
      <title>Ruby channel in telegram</title>
      <description> &lt;a href="https://t.me/railsclub" rel="nofollow"&gt;Channel about Ruby and Ruby on Rails&lt;/a&gt; </description>
      <pubDate>Sun, 31 Mar 2024 18:38:00 +0000</pubDate>
      <link>https://rubyflow.com/p/za8arf-ruby-channel-in-telegram</link>
      <guid>https://rubyflow.com/p/za8arf-ruby-channel-in-telegram</guid>
    </item>
    <item>
      <title>Pick a standard and move on</title>
      <description> Don’t have &lt;a href="https://remimercier.com/pick-a-standard/" rel="nofollow"&gt;standards and processes for your codebase&lt;/a&gt; and your team? You’re wasting so much cognitive energy! Let me try to convince you to pick one convention - any convention! - and move on to your core work. </description>
      <pubDate>Thu, 28 Mar 2024 08:27:23 +0000</pubDate>
      <link>https://rubyflow.com/p/9w45ro-pick-a-standard-and-move-on</link>
      <guid>https://rubyflow.com/p/9w45ro-pick-a-standard-and-move-on</guid>
    </item>
    <item>
      <title>Speeding Up Rails Assets Precompilation</title>
      <description> There has been a lot of conversations on social media about the “NoBuild ” approach: using native browser features and plain CSS+JavaScript to avoid a precompilation step for our assets. </description>
      <pubDate>Wed, 27 Mar 2024 17:41:40 +0000</pubDate>
      <link>https://rubyflow.com/p/6m98hj-speeding-up-rails-assets-precompilation</link>
      <guid>https://rubyflow.com/p/6m98hj-speeding-up-rails-assets-precompilation</guid>
    </item>
    <item>
      <title>Micro benchmarking value objects in Ruby: Data.define vs Struct vs OpenStruct</title>
      <description> I did &lt;a href="https://allaboutcoding.ghinda.com/micro-benchmarking-value-objects-in-ruby-datadefine-vs-struct-vs-openstruct" rel="nofollow"&gt;a series of benchmarks&lt;/a&gt; between Data class, Struct, and OpenStruct testing, creating new objects and accessing attributes. The tests consider keyword arguments and not positional arguments. </description>
      <pubDate>Wed, 27 Mar 2024 15:57:41 +0000</pubDate>
      <link>https://rubyflow.com/p/qxn9yf-micro-benchmarking-value-objects-in-ruby-datadefine-vs-struct-vs-openstruct</link>
      <guid>https://rubyflow.com/p/qxn9yf-micro-benchmarking-value-objects-in-ruby-datadefine-vs-struct-vs-openstruct</guid>
    </item>
    <item>
      <title>Keeping your database migrations strong with strong_migrations gem</title>
      <description> &lt;a href="https://www.shakacode.com/blog/keeping-your-database-migrations-strong-with-strong_migrations-gem/" rel="nofollow"&gt;https://www.shakacode.com/blog/keeping-your-database-migrations-strong-with-strong_migrations-gem/&lt;/a&gt; </description>
      <pubDate>Wed, 27 Mar 2024 13:32:25 +0000</pubDate>
      <link>https://rubyflow.com/p/edjzt8-keeping-your-database-migrations-strong-with-strongmigrations-gem</link>
      <guid>https://rubyflow.com/p/edjzt8-keeping-your-database-migrations-strong-with-strongmigrations-gem</guid>
    </item>
    <item>
      <title>I just released Kamal Handbook</title>
      <description> The time has come and I released my new book &lt;strong&gt;Kamal Handbook: The missing manual&lt;/strong&gt;. Kamal is an imperative deployment tool by 37signals and will be a Rails 8 default. </description>
      <pubDate>Wed, 27 Mar 2024 13:08:03 +0000</pubDate>
      <link>https://rubyflow.com/p/sl9037-i-just-released-kamal-handbook</link>
      <guid>https://rubyflow.com/p/sl9037-i-just-released-kamal-handbook</guid>
    </item>
    <item>
      <title>OnStrum::Healthcheck - simple configurable application healthcheck ❤️ rack middleware</title>
      <description> &lt;b&gt;OnStrum::Healthcheck&lt;/b&gt; allows you to embed healthcheck endpoints into your rack based application to perform healthcheck probes. Make your application compatible with Docker/Kubernetes healthchecks in a seconds: &lt;a href="https://github.com/on-strum/ruby-on-strum-healthcheck" rel="nofollow"&gt;https://github.com/on-strum/ruby-on-strum-healthcheck&lt;/a&gt; </description>
      <pubDate>Tue, 26 Mar 2024 22:11:02 +0000</pubDate>
      <link>https://rubyflow.com/p/vx5ta3-onstrumhealthcheck-simple-configurable-application-healthcheck-rack-middleware</link>
      <guid>https://rubyflow.com/p/vx5ta3-onstrumhealthcheck-simple-configurable-application-healthcheck-rack-middleware</guid>
    </item>
    <item>
      <title>Brute-forcing 2FA codes with Ruby</title>
      <description> Ruby is a popular choice of scripting language in the infosec world because it makes it possible to write quick scripts to automate something. In this post, I explain how I used a little Ruby to brute-force 2FA codes: </description>
      <pubDate>Tue, 26 Mar 2024 19:57:05 +0000</pubDate>
      <link>https://rubyflow.com/p/aqm0ew-brute-forcing-2fa-codes-with-ruby</link>
      <guid>https://rubyflow.com/p/aqm0ew-brute-forcing-2fa-codes-with-ruby</guid>
    </item>
    <item>
      <title>Secure code review checklist</title>
      <description> Checklists are really useful to ensure you don’t forget important things, so why not create one for the security aspect your code review process? Here are my recommended checks: </description>
      <pubDate>Tue, 26 Mar 2024 19:53:59 +0000</pubDate>
      <link>https://rubyflow.com/p/hnu8r5-secure-code-review-checklist</link>
      <guid>https://rubyflow.com/p/hnu8r5-secure-code-review-checklist</guid>
    </item>
    <item>
      <title>Gosu Game Jam 6 starts in 3 days!</title>
      <description> The Gosu Game Library Discord community is hosting its 6th game jam starting on March 29.
Details on &lt;a href="https://itch.io/jam/gosu-game-jam-6" rel="nofollow"&gt;itch.io&lt;/a&gt; </description>
      <pubDate>Tue, 26 Mar 2024 19:50:26 +0000</pubDate>
      <link>https://rubyflow.com/p/9w663m-gosu-game-jam-6-starts-in-3-days</link>
      <guid>https://rubyflow.com/p/9w663m-gosu-game-jam-6-starts-in-3-days</guid>
    </item>
    <item>
      <title>Customize your Gemfile for development and productivity</title>
      <description> Stuck because your pals aren’t into adding a gem to your workflow? No worries! Check out this article for tips on making your development smoother without their nod. Happy coding with Ruby! </description>
      <pubDate>Tue, 26 Mar 2024 16:40:23 +0000</pubDate>
      <link>https://rubyflow.com/p/njg9ip-customize-your-gemfile-for-development</link>
      <guid>https://rubyflow.com/p/njg9ip-customize-your-gemfile-for-development</guid>
    </item>
    <item>
      <title>An interactive intro to ruby debugger, in the debugger</title>
      <description> I think the best way to learn is by doing, so I made an introduction to ruby debug gem where the instructions are in the code that you are moving through with the debugger. You get to use the debugger as you are reading about it. Turtles all the way down: &lt;a href="https://radanskoric.com/articles/ruby-debug-tutorial-intro?utm_source=rubyflow&amp;amp;utm_medium=feed&amp;amp;utm_campaign=ruby-debug-tutorial-intro" rel="nofollow"&gt;An interactive intro to ruby debugger, in the debugger&lt;/a&gt; </description>
      <pubDate>Tue, 26 Mar 2024 15:47:59 +0000</pubDate>
      <link>https://rubyflow.com/p/u0y8qr-an-interactive-intro-to-ruby-debugger-in-the-debugger</link>
      <guid>https://rubyflow.com/p/u0y8qr-an-interactive-intro-to-ruby-debugger-in-the-debugger</guid>
    </item>
  </channel>
</rss>
