<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://rubyonrails.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rubyonrails.org/" rel="alternate" type="text/html" /><updated>2024-04-19T12:54:25+00:00</updated><id>https://rubyonrails.org/feed.xml</id><title type="html">Ruby on Rails</title><subtitle>A web-app framework that includes everything needed to create database-backed web applications according to the Model-View-Controller (MVC) pattern.</subtitle><entry><title type="html">ActiveRecord::Base#pluck accepts hash values, devcontainers improvements and more!</title><link href="https://rubyonrails.org/2024/4/19/this-week-in-rails" rel="alternate" type="text/html" title="ActiveRecord::Base#pluck accepts hash values, devcontainers improvements and more!" /><published>2024-04-19T00:00:00+00:00</published><updated>2024-04-19T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/19/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/19/this-week-in-rails"><![CDATA[<p>Hey everyone, Happy Friday! I hope you get some time to unwind and relax going into the weekend 😎</p>

<p><a href="https://www.saeloun.com/team/vipul">Vipul</a> here with the latest updates for This Week in Rails. Let’s dive in.</p>

<p><a href="https://github.com/rails/rails/pull/51565">Allow ActiveRecord::Base#pluck to accept hash values</a><br />
This change adds support for  <code class="language-plaintext highlighter-rouge">ActiveRecord::Base#pluck</code> to accept hash values.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">pluck</span><span class="p">(</span><span class="s2">"posts.id"</span><span class="p">,</span> <span class="s2">"comments.id"</span><span class="p">,</span> <span class="s2">"comments.body"</span><span class="p">)</span>

<span class="c1"># After</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">pluck</span><span class="p">(</span><span class="ss">posts: </span><span class="p">[</span><span class="ss">:id</span><span class="p">],</span> <span class="ss">comments: </span><span class="p">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:body</span><span class="p">])</span>
</code></pre></div></div>

<p>The same applies to <code class="language-plaintext highlighter-rouge">.pick</code>, which is implemented using <code class="language-plaintext highlighter-rouge">.pluck</code>.</p>

<p><a href="https://github.com/rails/rails/pull/48785">Fix child association loading in :n_plus_one_only mode</a>   <br />
Strict loading in <code class="language-plaintext highlighter-rouge">:n_plus_one_only</code> mode is designed to prevent performance issues when deeply traversing associations. 
It allows <code class="language-plaintext highlighter-rouge">Person.find(1).posts</code>, but not <code class="language-plaintext highlighter-rouge">Person.find(1).posts.map(&amp;:category)</code>. 
This fix avoids the surprise that occurs when <code class="language-plaintext highlighter-rouge">person.posts.first</code> eagerly loads the whole association rather than allowing the user to manage the child association.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">person</span><span class="p">.</span><span class="nf">strict_loading!</span><span class="p">(</span><span class="ss">mode: :n_plus_one_only</span><span class="p">)</span>

<span class="c1"># Before</span>
<span class="n">person</span><span class="p">.</span><span class="nf">posts</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># SELECT * FROM posts WHERE person_id = 1; -- non-deterministic order</span>

<span class="c1"># After</span>
<span class="n">person</span><span class="p">.</span><span class="nf">posts</span><span class="p">.</span><span class="nf">first</span> <span class="c1"># this is 1+1, not N+1</span>
<span class="c1"># SELECT * FROM posts WHERE person_id = 1 ORDER BY id LIMIT 1;</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/49267">Add save_and_open_page helper to IntegrationTest</a>  <br />
<code class="language-plaintext highlighter-rouge">save_and_open_page</code> is a capybara helper that lets developers inspect the status of the page at any given point in their tests.
This change adds <code class="language-plaintext highlighter-rouge">save_and_open_page</code> helper support to allow using them from within system tests.</p>

<p><a href="https://github.com/rails/rails/pull/51588">Change devcontainer.json to forward used ports for the project</a><br />
Currently the generated <code class="language-plaintext highlighter-rouge">devcontainer.json</code> file does not forward the ports required for the project, so we might need to manually change it in order to access the project when running via <code class="language-plaintext highlighter-rouge">devcontainer</code>.
This PR adds the required forwarding for the project by default.</p>

<p><a href="https://github.com/rails/rails/pull/51520">Add node and yarn to devcontainer when creating a project with Javascript</a><br />
Currently when creating a rails project with javascript (–javascript=esbuild for example) neither node or yarn are added to the devcontainer. 
This change adds both when needed.</p>

<p><a href="https://github.com/rails/rails/pull/51563">Fix typo in Feature Policy for idle-detection</a><br />
This change fixes a small typo in feature policy <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy/idle-detection"><code class="language-plaintext highlighter-rouge">idle-detection</code></a> and not <code class="language-plaintext highlighter-rouge">idle_detection</code> which was leading to this policy not being applied before.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-04-13%7D...main@%7B2024-04-19%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240413-20240419">17 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>vipulnsward</name></author><category term="news" /><summary type="html"><![CDATA[Hey everyone, Happy Friday! I hope you get some time to unwind and relax going into the weekend 😎]]></summary></entry><entry><title type="html">A week of fixes</title><link href="https://rubyonrails.org/2024/4/12/this-week-in-rails" rel="alternate" type="text/html" title="A week of fixes" /><published>2024-04-12T00:00:00+00:00</published><updated>2024-04-12T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/12/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/12/this-week-in-rails"><![CDATA[<p>Hi, it’s <a href="https://greg.molnar.io">Greg</a>. Let’s explore this week’s changes in the Rails codebase.</p>

<p><a href="https://github.com/rails/rails/pull/51549">Fix union select parentheses</a><br />
When building <code class="language-plaintext highlighter-rouge">UNION</code> or <code class="language-plaintext highlighter-rouge">UNION ALL</code> queries involving <code class="language-plaintext highlighter-rouge">LIMIT</code> or <code class="language-plaintext highlighter-rouge">ORDER BY</code>, Arel generated invalid SQL previously. This pull request changes <code class="language-plaintext highlighter-rouge">Arel::Visitors::ToSql</code> so that <code class="language-plaintext highlighter-rouge">SELECT</code> statements in <code class="language-plaintext highlighter-rouge">Union</code> and <code class="language-plaintext highlighter-rouge">UnionAll</code> nodes are enclosed in parentheses to avoid syntax errors.</p>

<p><a href="https://github.com/rails/rails/pull/51531">Fix copying virtual columns when altering a table in SQLite3</a><br />
When Rails alters a SQLite table, it creates a new table and copies the structure and data from the old one.<br />
The problem is that virtual columns are incorrectly copied (copied as classic columns). This pull request fixes that.</p>

<p><a href="https://github.com/rails/rails/pull/51525">Fix <strong>ActiveJob::EnqueueAfterTransactionCommit</strong> API</a><br />
<code class="language-plaintext highlighter-rouge">perform_later</code> is supposed to return the <code class="language-plaintext highlighter-rouge">Job</code> instance on success, and <code class="language-plaintext highlighter-rouge">false</code> on error. When the enqueue is automatically delayed, it is of course impossible to predict if the actual queueing will succeed, but for backward compatibility reasons, it is best to assume it will.<br />
If necessary, you can hold onto the job instance and check for <code class="language-plaintext highlighter-rouge">#successfully_enqueued?</code> after the transaction has completed.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-04-05%7D...main@%7B2024-04-12%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240405-20240412">31 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Greg</name></author><category term="news" /><summary type="html"><![CDATA[Hi, it’s Greg. Let’s explore this week’s changes in the Rails codebase.]]></summary></entry><entry><title type="html">Deferring jobs enqueueing to after the transaction commit, queries count in rendering logs and more</title><link href="https://rubyonrails.org/2024/4/5/this-week-in-rails" rel="alternate" type="text/html" title="Deferring jobs enqueueing to after the transaction commit, queries count in rendering logs and more" /><published>2024-04-05T00:00:00+00:00</published><updated>2024-04-05T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/5/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/5/this-week-in-rails"><![CDATA[<p>Hi, <a href="https://twitter.com/morgoth85">Wojtek</a> here exploring this week’s changes.</p>

<p><a href="https://rubyonrails.org/world/2024">Rails World 2024 edition website is now live</a><br />
With tickets going on sale in April.</p>

<p><a href="https://github.com/rails/rails/pull/51474">Allow to register transaction callbacks outside of a record</a><br />
<em>ActiveRecord::Base.transaction</em> now yields an <em>ActiveRecord::Transaction</em> object, which allows to register callbacks on it.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Article</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span> <span class="o">|</span><span class="n">transaction</span><span class="o">|</span>
  <span class="n">article</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="ss">published: </span><span class="kp">true</span><span class="p">)</span>
  <span class="n">transaction</span><span class="p">.</span><span class="nf">after_commit</span> <span class="k">do</span>
    <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Added <em>ActiveRecord::Base.current_transaction</em> which also allows to register callbacks on it.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Article</span><span class="p">.</span><span class="nf">current_transaction</span><span class="p">.</span><span class="nf">after_commit</span> <span class="k">do</span>
  <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Add <em>ActiveRecord.after_all_transactions_commit</em> callback.</p>

<p>Useful for code that may run either inside or outside a transaction and needs to perform work after the state changes have been properly persisted.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">publish_article</span><span class="p">(</span><span class="n">article</span><span class="p">)</span>
  <span class="n">article</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="ss">published: </span><span class="kp">true</span><span class="p">)</span>
  <span class="no">ActiveRecord</span><span class="p">.</span><span class="nf">after_all_transactions_commit</span> <span class="k">do</span>
    <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51426">Automatically delay Active Job enqueues to after commit</a><br />
A common mistake with Active Job is to enqueue jobs from inside a transaction, causing them to potentially be picked and ran by another process, before the transaction is committed, which result in various errors.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Topic</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
  <span class="n">topic</span> <span class="o">=</span> <span class="no">Topic</span><span class="p">.</span><span class="nf">create</span>
  <span class="no">NewTopicNotificationJob</span><span class="p">.</span><span class="nf">perform_later</span><span class="p">(</span><span class="n">topic</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Now Active Job will automatically defer the enqueuing to after the transaction is committed, and drop the job if the transaction is rolled back.</p>

<p>Various queue implementations can choose to disable this behavior, and users can disable it, or force it on a per job basis:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">NewTopicNotificationJob</span> <span class="o">&lt;</span> <span class="no">ApplicationJob</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">enqueue_after_transaction_commit</span> <span class="o">=</span> <span class="ss">:never</span> <span class="c1"># or :always or :default</span>
<span class="k">end</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51457">Add queries count to template rendering instrumentation</a><br />
There is often a need to quickly see how many SQL queries the current action produced. For example, to quickly check if N+1 was solved or if the caching is working and so the number of queries reduced etc. This can be done manually by inspecting the logs and counting the number of queries, but for largish actions with tens-hundreds of SQL queries this is not a simple task.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Before
Completed 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms | Allocations: 112788)
# After
Completed 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms (2 queries, 1 cached) | Allocations: 112788)
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51453">Add the ability to ignore counter cache columns while they are backfilling</a><br />
Starting to use counter caches on existing large tables can be troublesome, because the column values must be backfilled separately of the column addition (to not lock the table for too long) and before the use of <em>:counter_cache</em> (otherwise methods like <em>size/any?</em>, which use counter caches internally, can produce incorrect results). People usually use database triggers or callbacks on child associations while backfilling before introducing a counter cache configuration to the association.</p>

<p>Now, to safely backfill the column, while keeping the column updated with child records added/removed, use:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">belongs_to</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">counter_cache: </span><span class="p">{</span> <span class="ss">active: </span><span class="kp">false</span> <span class="p">}</span>
<span class="k">end</span>
</code></pre></div></div>

<p>While the counter cache is not “active”, the methods like <em>size/any?</em> will not use it, but get the results directly from the database. After the counter cache column is backfilled, simply remove the <em>{ active: false }</em> part from the counter cache definition, and it will now be used by the mentioned methods.</p>

<p><a href="https://github.com/rails/rails/pull/50941">Retry Actionable Error when running tests</a><br />
Allow Actionable Errors encountered when running tests to be retried. This feature will only be present on interactive terminals.</p>

<p><a href="https://github.com/rails/rails/pull/51478">Raise named exception when database reports an invalid version</a><br />
When the MySQL database returns an invalid version string the <em>ActiveRecord::ActiveRecordError</em> error will now be raised.</p>

<p><a href="https://github.com/rails/rails/pull/51447">Make ActiveSupport::BacktraceCleaner copy filters and silencers on dup and clone</a><br />
 Previously the copy would still share the internal silencers and filters array, causing state to leak.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-29%7D...main@%7B2024-04-05%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240329-20240405">16 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Wojtek</name></author><category term="news" /><summary type="html"><![CDATA[Hi, Wojtek here exploring this week’s changes.]]></summary></entry><entry><title type="html">Retry known idempotent SELECT queries, New Active Record configuration option, and more!</title><link href="https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401" rel="alternate" type="text/html" title="Retry known idempotent SELECT queries, New Active Record configuration option, and more!" /><published>2024-03-29T00:00:00+00:00</published><updated>2024-03-29T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401</id><content type="html" xml:base="https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401"><![CDATA[<p>Greetings! I’m <a href="https://twitter.com/siaw23">Emmanuel Hayford</a>, here to bring you your weekly instalment of “This Week In Rails”. Let’s dive straight into it.
 
Two new guides are now open for community review. If you are well versed in Action View, partials, and helpers, please review and submit your feedback here:</p>

<ul>
  <li><a href="https://github.com/rails/rails/pull/51435">Action View Overview PR</a></li>
  <li><a href="https://github.com/rails/rails/pull/51432">Action View Helpers PR</a></li>
</ul>

<p><a href="https://github.com/rails/rails/pull/51349">Add config.active_record.permanent_connection_checkout setting</a>
This setting determines the action taken when <em>ActiveRecord::Base.connection</em> is accessed: whether it raises an error, emits a deprecation warning, or does nothing.</p>

<p><em>ActiveRecord::Base.connection</em> acquires a database connection from the pool and maintains it until the request or job concludes. However, this behaviour may prove undesirable in environments with more threads or fibers than available connections.</p>

<p>This configuration facilitates the identification and elimination of code utilising <em>ActiveRecord::Base.connection</em>, encouraging migration to <em>ActiveRecord::Base.with_connection</em> instead. The default behaviour remains unaltered.</p>

<p><a href="https://github.com/rails/rails/pull/51447">Make ActiveSupport::BacktraceCleaner copy filters on dup</a>
Enhance <em>ActiveSupport::BacktraceCleaner</em> to replicate filters and silencers during duplication and cloning.</p>

<p>Previously, duplication still resulted in shared internal silencers and filters arrays, leading to state leakage.</p>

<p><a href="https://github.com/rails/rails/pull/51408">Ensure necessary options are added to association options</a></p>

<p>Noting the typo in <em>:through</em>, take the following code sample as an example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
    <span class="n">has_many</span> <span class="ss">:courses</span>
    <span class="n">has_many</span> <span class="ss">:assignments</span><span class="p">,</span> <span class="ss">trough: :courses</span>
<span class="k">end</span>
</code></pre></div></div>

<p>You’d get a misleading error along the lines of</p>

<p>“Unknown key: :trough. Valid keys are: :class_name, :anonymous_class, :primary_key, …, :index_errors (ArgumentError)”,</p>

<p>with this pull request, you’ll now get a clearer message, more like:</p>

<p>“Unknown key: :trough. Valid keys are: :class_name, :anonymous_class, :primary_key, …, :index_errors, :through (ArgumentError)”.</p>

<p>Note that in the second error message <em>:through</em> is included in the list of valid options.</p>

<p><a href="https://github.com/rails/rails/pull/51336">Retry known idempotent SELECT queries on connection-related exceptions</a>
Implements a mechanism to automatically retry <em>SELECT</em> queries that are known to be idempotent in the event of connection-related exceptions.</p>

<p>Queries constructed through Arel tree traversal or based on known model attributes are inherently idempotent and can be safely retried upon encountering a connection error. Previously, certain adapters like <em>TrilogyAdapter</em> would raise <em>ActiveRecord::ConnectionFailed: Trilogy::EOFError</em> when faced with a connection error during a request.</p>

<p>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240322-20240329">22 contributors</a> to the Rails codebase this past week!</p>

<p>Take care.</p>

<p>Your weekly inside scoop of interesting commits, pull requests and more from <a href="https://github.com/rails/rails"><strong>Rails</strong></a>.</p>

<p><i><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</i></p>]]></content><author><name>Emmanuel Hayford</name></author><category term="news" /><summary type="html"><![CDATA[Greetings! I’m Emmanuel Hayford, here to bring you your weekly instalment of “This Week In Rails”. Let’s dive straight into it.   Two new guides are now open for community review. If you are well versed in Action View, partials, and helpers, please review and submit your feedback here:]]></summary></entry><entry><title type="html">Rails guides facelift, two new official gems and more!</title><link href="https://rubyonrails.org/2024/3/22/this-week-in-rails" rel="alternate" type="text/html" title="Rails guides facelift, two new official gems and more!" /><published>2024-03-22T00:00:00+00:00</published><updated>2024-03-22T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/22/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/3/22/this-week-in-rails"><![CDATA[<p>Hey everyone, Happy Weekend!<br />
<a href="https://www.saeloun.com/team/vipul">Vipul</a> here with the latest updates for This Week in Rails. Let’s dive in.</p>

<p><a href="https://rubyonrails.org/2024/3/20/rails-guides-get-a-facelift">Rails guides gets a facelift</a> <br />
Rails guides has a received a big design update!<br />
Check out the <a href="https://edgeguides.rubyonrails.org/">Edge Guides</a> to see these changes.
If you find a bug or wish to submit a suggestion, you can open a discussion on <a href="https://github.com/rails/rails/discussions">GitHub</a>.</p>

<p><a href="https://twitter.com/dhh/status/1770590629149786189">Two new official gems</a><br />
<a href="https://github.com/rails/solid_queue">Solid Queue</a>, a DB-based queuing backend for Active Job, has graduated to an official <a href="https://twitter.com/dhh/status/1770590629149786189">Rails gem</a>.</p>

<p><a href="https://twitter.com/dhh/status/1770590866492809229">Same</a> for <a href="https://github.com/rails/mission_control-jobs">Mission Control — Jobs</a>, 
which provides a Rails-based frontend to Active Job adapters. 
It currently supports Resque and Solid Queue.</p>

<p><a href="https://github.com/rails/rails/pull/51351">Don’t enqueue jobs to process a preview image if no variant requires it</a><br />
This PR fixes the issue where previewable attachments that don’t specify any variants, or no variants that require pre-processing, 
were still attempting to queue a job to process the preview image anyways.</p>

<p><a href="https://github.com/rails/rails/pull/51353">Eliminate remaining uses of lease_connection inside Active Record</a><br />
As part of moving towards adding a <a href="https://github.com/rails/rails/pull/51349">new <code class="language-plaintext highlighter-rouge">config.active_record.permanent_connection_checkout</code> setting</a>, 
this change eliminates the remaining uses of <code class="language-plaintext highlighter-rouge">lease_connection</code> inside Active Record API.</p>

<p><a href="https://github.com/rails/rails/pull/51308">Do not build View Watcher until the first updated? check</a><br />
Currently initialization of every <code class="language-plaintext highlighter-rouge">Rails::Engine</code> leads to the creation of a new View watcher when the engine prepends its paths.
This contributes to the time it takes to perform the first cold request on a lazy loaded application.
This change delays the initialization of the View watcher until its first usage to only have one initialization of the watcher.</p>

<p><a href="https://github.com/rails/rails/pull/51345">Allow primary_key: association option to be composite </a><br />
Association’s <code class="language-plaintext highlighter-rouge">primary_key</code> can be composite when derived from associated class’s <code class="language-plaintext highlighter-rouge">primary_key</code> or <code class="language-plaintext highlighter-rouge">query_constraints</code>. 
Rails dint allow setting this explicitly even though it was already capable of supporting it.</p>

<p>This commit allows <code class="language-plaintext highlighter-rouge">primary_key</code> association option to be an array to support this behavior.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-16%7D...main@%7B2024-03-22%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240316-20240322">14 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>vipulnsward</name></author><category term="news" /><summary type="html"><![CDATA[Hey everyone, Happy Weekend! Vipul here with the latest updates for This Week in Rails. Let’s dive in.]]></summary></entry><entry><title type="html">Rails Guides get a facelift</title><link href="https://rubyonrails.org/2024/3/20/rails-guides-get-a-facelift" rel="alternate" type="text/html" title="Rails Guides get a facelift" /><published>2024-03-20T00:00:00+00:00</published><updated>2024-03-20T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/20/rails-guides-get-a-facelift</id><content type="html" xml:base="https://rubyonrails.org/2024/3/20/rails-guides-get-a-facelift"><![CDATA[<p>When <a href="/2021/12/15/Rails-7-fulfilling-a-vision">Rails 7.0</a> landed in December 2021, it came with a fresh new homepage and a new boot screen. The design of the guides, however, has remained largely untouched since 2009 - a point which hasn’t gone unnoticed (we heard your feedback).</p>

<p>With all of the work right now going into removing complexity from the Rails framework and making the <a href="/2024/2/6/documentation-update-work-has-begun">documentation</a> consistent, clear, and up-to-date, it was time to tackle the design of the guides and make them equally modern, simple, and fresh.</p>

<p>We worked with UX designer <a href="https://meticulous.com/">John Athayde</a> to take the look and feel of the homepage and transfer that over to the Rails Guide to make it clean, sleek, and up-to-date.</p>

<p>The layout will remain the same, but from today you will see the following changes reflected in the <a href="https://edgeguides.rubyonrails.org/">Edge Guides</a>:</p>

<ul>
  <li>Cleaner, less busy design.</li>
  <li>Fonts, color scheme, and logo more consistent with the home page.</li>
  <li>Updated iconography.</li>
  <li>Simplified navigation.</li>
  <li>Sticky ‘Chapter’ navbar when scrolling.</li>
</ul>

<p><strong>Before &amp; After</strong></p>

<p><img src="/assets/images/guide-update 1.png" style="width: 50%" /><img src="/assets/images/guide-update 2.png" style="width: 50%" /></p>

<p><img src="/assets/images/guide-update 3.png" style="width: 50%" /><img src="/assets/images/guide-update 4.png" style="width: 50%" /></p>

<p><img src="/assets/images/guide-update 6.png" style="width: 50%" /><img src="/assets/images/guide-update 5.png" style="width: 50%" /></p>

<p>For now, this refresh is still a work in progress, so it is only reflected in the <a href="https://edgeguides.rubyonrails.org/">Edge Guides</a> while we make the final adjustments. Once we are happy with it, we will update the guides for stable Rails 7 versions. This design will then render for all new guides from the next release onwards.</p>

<p><strong>Feedback</strong></p>

<p>If you find a bug or wish to submit a suggestion*, please <a href="https://github.com/rails/rails/discussions/categories/docs">open a discussion on GitHub</a>, and feel free to tag <a href="https://github.com/AmandaPerino">Amanda</a> for visibility.</p>

<p>Hope you like the changes, and we look forward to your feedback!</p>

<p>(* A search bar has already been suggested and we will look into options with the Core team.)</p>]]></content><author><name>Rails Foundation</name></author><category term="news" /><summary type="html"><![CDATA[When Rails 7.0 landed in December 2021, it came with a fresh new homepage and a new boot screen. The design of the guides, however, has remained largely untouched since 2009 - a point which hasn’t gone unnoticed (we heard your feedback).]]></summary></entry><entry><title type="html">Active Record Basics Guide Refresh, Encrypted Attributes Re-Optimization, and more…</title><link href="https://rubyonrails.org/2024/3/15/this-week-in-rails" rel="alternate" type="text/html" title="Active Record Basics Guide Refresh, Encrypted Attributes Re-Optimization, and more…" /><published>2024-03-15T00:00:00+00:00</published><updated>2024-03-15T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/15/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/3/15/this-week-in-rails"><![CDATA[<p>Hi, it’s <a href="https://github.com/zzak">zzak</a>. Let’s explore this week’s changes in the Rails codebase.</p>

<p>The <a href="https://sessionize.com/rails-world/">Rails World CFP</a> will close in just one week on March 21.<br />
Submit your talk in time!</p>

<p><a href="https://github.com/rails/rails/pull/51226">Active Record Basics Guide</a><br />
This PR refreshes the guide covering the basics of Active Record.</p>

<p><a href="https://github.com/rails/rails/pull/51325">Do not try to alias on key update when raw SQL is supplied</a><br />
A bug was found when updating duplicates with raw SQL.</p>

<p><a href="https://github.com/rails/rails/pull/51324">Memoize “key_provider” from “key” or deterministic “key_provider” if any</a><br />
Previously, this memoization was removed which lead to a performance hit for encrypted attributes.</p>

<p><a href="https://github.com/rails/rails/pull/51317">Updating Astana with a Western Kazakhstan timezone</a><br />
On March 1, 2024, Kazakhstan (all parts) switched to a single time zone UTC+5.<br />
Using the latest <a href="https://github.com/tzinfo/tzinfo-data/releases/tag/v1.2024.1">tzinfo-data</a> that updated the Kazakhstan timezones, ActiveSupport still showed the incorrect offset because it was pointing to the <code class="language-plaintext highlighter-rouge">Asia/Dhaka</code> Bangladesh timezone, which will not get the same TZ offset change.</p>

<p><a href="https://github.com/rails/rails/pull/51313">Preserve encoding on “truncate_bytes”</a><br />
This PR addressed an issue where <code class="language-plaintext highlighter-rouge">String#truncate_bytes</code> can return a string with a different encoding than the one being truncated.</p>

<p><a href="https://github.com/rails/rails/pull/51299">Support custom blob key in ActiveStorage::Blob.compose</a><br />
Since Rails 6.1, Active Storage has allowed to provide a custom <code class="language-plaintext highlighter-rouge">key</code> when attaching a new file.<br />
This PR adds support when using the <code class="language-plaintext highlighter-rouge">compose</code> class method to customize the name of the underlying service object.</p>

<p><a href="https://github.com/rails/rails/pull/51286">Fix MySQL adapter for inserts with aliases</a><br />
This pull request addresses errors that occur when using MySQL 8.0.18 or lower version of MySQL 8.0.</p>

<p><a href="https://github.com/rails/rails/pull/51267">Railties configure sanitizer vendor in 7.1 defaults more robustly</a><br />
In order to avoid an issue where Rails::HTML::Sanitizer is not yet loaded, which resulted in the sanitizer vendor remaining as <code class="language-plaintext highlighter-rouge">Rails::HTML4</code> and not be set to <code class="language-plaintext highlighter-rouge">Rails::HTML5</code> as intended in Rails 7.1.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-08%7D...main@%7B2024-03-15%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240308-20240315">20 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>zzak</name></author><category term="news" /><summary type="html"><![CDATA[Hi, it’s zzak. Let’s explore this week’s changes in the Rails codebase.]]></summary></entry><entry><title type="html">Illustrator file preview, deprecations and more!</title><link href="https://rubyonrails.org/2024/3/8/this-week-in-rails" rel="alternate" type="text/html" title="Illustrator file preview, deprecations and more!" /><published>2024-03-08T00:00:00+00:00</published><updated>2024-03-08T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/8/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/3/8/this-week-in-rails"><![CDATA[<p>Hi, it’s <a href="https://greg.molnar.io">Greg</a>. Let’s explore this week’s changes in the Rails codebase.</p>

<p><a href="https://github.com/rails/rails/issues/51262">Feedback for structuring the Active Record Query Guide</a> <br />
The Active Record Querying Guide is getting restructured and the team working on it requests feedback from the community.</p>

<p><a href="https://sessionize.com/rails-world">Rails World CFP closes in 2 weeks</a> <br />
2 more weeks left to submit your talk to Rails World 2024!</p>

<p><a href="https://github.com/rails/rails/pull/51267">Railties: configure sanitizer vendor in 7.1 defaults more robustly</a><br />
In apps where rails-html-sanitizer was not eagerly loaded, the sanitizer default could end up being <code class="language-plaintext highlighter-rouge">Rails::HTML4::Sanitizer</code> when it should be set to <code class="language-plaintext highlighter-rouge">Rails::HTML5::Sanitizer</code>. This change <code class="language-plaintext highlighter-rouge">require</code>s rails-html-sanitizer immediately before it’s needed, and avoids the possibly-incorrect assumption that <code class="language-plaintext highlighter-rouge">Rails::HTML::Sanitizer</code> is already defined.</p>

<p><a href="https://github.com/rails/rails/p_posts/2024-03-08-this-week-in-rails.markdownull/51235">Illustrator .ai files are previewable as PDFs</a> <br />
This happened to work with Marcel 1.0.2 and earlier since magic byte sniffing sees that Illustrator files are PDFs internally, causing these files to be treated as <code class="language-plaintext highlighter-rouge">application/pdf</code> despite having a declared content type of <code class="language-plaintext highlighter-rouge">application/illustrator</code> and an <code class="language-plaintext highlighter-rouge">.ai</code> file extension. Marcel 1.0.3 corrected this to the more specific <code class="language-plaintext highlighter-rouge">application/illustrator</code> subtype of <code class="language-plaintext highlighter-rouge">application/pdf</code>, but the MuPDF previewer only accepts the parent <code class="language-plaintext highlighter-rouge">application/pdf</code> type.
This pull request changes it to accept PDF and any child types allows the previewer to explicitly work with Illustrator files again, which was only a happy accident previously.
Another pull request made <a href="https://github.com/rails/rails/pull/51236">illustrator files previewable with Poppler as well</a></p>

<p><a href="https://github.com/rails/rails/pull/51230">Deprecate <em>ActiveRecord::Base.connection</em> and <em>ConnectionPool#connection</em></a> <br />
This pull request deprecates <code class="language-plaintext highlighter-rouge">ActiveRecord::Base.connection</code> and <code class="language-plaintext highlighter-rouge">ActiveRecord::ConnectionAdapters::ConnectionPool#connection</code> in favor of <code class="language-plaintext highlighter-rouge">.lease_connection</code>. The method has been renamed as <code class="language-plaintext highlighter-rouge">lease_connection</code> to better reflect that the returned connection will be held for the duration of the request or job. <code class="language-plaintext highlighter-rouge">ActiveRecord::Base.connection</code>’s deprecation is a soft deprecation, no warnings will be issued and there is no current plan to remove the method.</p>

<p><a href="https://github.com/rails/rails/pull/51204">Add <em>dirties</em> option to <em>Model.uncached</em></a><br />
This pull request adds a <code class="language-plaintext highlighter-rouge">dirties</code> option to <code class="language-plaintext highlighter-rouge">ActiveRecord::Base.uncached</code> and <code class="language-plaintext highlighter-rouge">ActiveRecord::ConnectionAdapters::ConnectionPool#uncached</code>. When set to <code class="language-plaintext highlighter-rouge">true</code> (the default), writes will clear all query caches belonging to the current thread. When set to <code class="language-plaintext highlighter-rouge">false</code>, writes to the affected connection pool will not clear any query cache.
This is needed by Solid Cache so that cache writes do not clear query caches.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-01%7D...main@%7B2024-03-08%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240301-20240308">16 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Greg</name></author><category term="news" /><summary type="html"><![CDATA[Hi, it’s Greg. Let’s explore this week’s changes in the Rails codebase.]]></summary></entry><entry><title type="html">Added fixture method and bugfixes</title><link href="https://rubyonrails.org/2024/3/1/this-week-in-rails" rel="alternate" type="text/html" title="Added fixture method and bugfixes" /><published>2024-03-01T00:00:00+00:00</published><updated>2024-03-01T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/1/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/3/1/this-week-in-rails"><![CDATA[<p>Hi, <a href="https://twitter.com/morgoth85">Wojtek</a> from this side. Let’s explore this week’s few changes in the Rails codebase.</p>

<p><a href="https://rubyonrails.org/2024/2/21/Rails-Versions-6-1-7-7-7-0-8-1-and-7-1-3-2-have-been-released">Rails security update releases</a><br />
Rails Versions 6.1.7.7, 7.0.8.1, and 7.1.3.2 have been released last week which contain fixes for security issues.</p>

<p><a href="https://github.com/rails/rails/pull/51213">Expose a generic “fixture” method in tests</a><br />
To avoid conflicting methods, in example with Minitest, it is possible now to load fixtures like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert_equal</span> <span class="s2">"Ruby on Rails"</span><span class="p">,</span> <span class="n">web_sites</span><span class="p">(</span><span class="ss">:rubyonrails</span><span class="p">).</span><span class="nf">name</span>
<span class="n">assert_equal</span> <span class="s2">"Ruby on Rails"</span><span class="p">,</span> <span class="n">fixture</span><span class="p">(</span><span class="ss">:web_sites</span><span class="p">,</span> <span class="ss">:rubyonrails</span><span class="p">).</span><span class="nf">name</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51176">Introduce assert_initializer</a><br />
Compliments the existing <em>initializer</em> generator action.</p>

<p><a href="https://github.com/rails/rails/pull/51191">Set default_url_options values in development/test environments</a><br />
 Prior to this commit, new Rails applications would raise <em>ActionView::Template::Error</em> if a mailer included a url built with a <em>*_path</em> helper.</p>

<p><a href="https://github.com/rails/rails/pull/51165">Fix error message for not derived foreign key in Active Record</a><br />
Using <em>query_constraints</em> method with a single non-primary-key column used to raise as expected, but with an incorrect error message. This has been fixed to raise with a more appropriate error message.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-02-25%7D...main@%7B2024-03-01%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240225-20240301">13 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Wojtek</name></author><category term="news" /><summary type="html"><![CDATA[Hi, Wojtek from this side. Let’s explore this week’s few changes in the Rails codebase.]]></summary></entry><entry><title type="html">Rails Foundation and Doximity to Sponsor Rails Girls São Paulo 2024</title><link href="https://rubyonrails.org/2024/2/27/rails-foundation-doximity-sponsor-rails-girls-sao-paolo" rel="alternate" type="text/html" title="Rails Foundation and Doximity to Sponsor Rails Girls São Paulo 2024" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/2/27/rails-foundation-doximity-sponsor-rails-girls-sao-paolo</id><content type="html" xml:base="https://rubyonrails.org/2024/2/27/rails-foundation-doximity-sponsor-rails-girls-sao-paolo"><![CDATA[<p>(Portuguese below)</p>

<p>The Rails Foundation and <a href="https://www.doximity.com/">Doximity</a> are teaming up with <a href="https://railsgirls.com.br/">Rails Girls São Paulo</a> and <a href="https://www.tropicalrb.com/en/">Tropical.rb</a> to co-host the return of the Rails Girls São Paulo in 2024.</p>

<p><strong>Name</strong>: Rails Girls São Paulo  <br />
<strong>Date</strong>: April 6, 2024  <br />
<strong>Location</strong>: Le Wagon São Paulo  <br /></p>

<p>Scheduled for the weekend following Tropical.rb, Rails Girls São Paulo aims to bring together 30 individuals in teams of 6, each guided by dedicated Portuguese-speaking mentors, for a weekend of learning, coding, and community building.  <br /></p>

<p>Rails Girls took place regularly in São Paulo from 2015 to 2019, introducing nearly 300 local students to Rails in that time. Inspired by the current momentum in the Rails community and the return of Tropical.rb in Brazil, the event is back with a new format targeting women who already have a basic knowledge of Rails and wish to enhance their skills even further to evolve in their careers. The aim is to organize two Rails Girls events per year in Brazil.  <br /></p>

<p>Education is an important part of the Rails Foundation mission, and one way to further that mission is by supporting organizations like Rails Girls São Paulo and Tropical.rb who do fantastic work promoting Rails and introducing Rails to new audiences around the world. <br /></p>

<p>Doximity was the perfect co-host for this event. In addition to being a Core member of the Rails Foundation, they have a strong company culture of mentorship and a team of developers based in Brazil who can stand in as mentors during this edition of Rails Girls.  <br /></p>

<p>For more information about the Rails Girls São Paulo event and to register, please visit <a href="https://railsgirls.com.br/">railsgirls.com.br</a>.  <br /></p>

<p>We can’t wait to meet everyone in São Paulo. See you soon!  <br /></p>

<p><strong>Portuguese:</strong>  <br /></p>

<p>A Rails Foundation e a <a href="https://www.doximity.com/">Doximity</a> estão se unindo ao <a href="https://railsgirls.com.br/">Rails Girls São Paulo</a> e ao <a href="https://www.tropicalrb.com/en/">Tropical.rb</a> para co-organizar a volta do Rails Girls São Paulo em 2024.  <br /></p>

<p><strong>Nome</strong>: Rails Girls São Paulo  <br />
<strong>Data</strong>: 6 de Abril de 2024  <br />
<strong>Local</strong>: Le Wagon São Paulo  <br /></p>

<p>No sábado seguinte ao Tropical.rb, o Rails Girls São Paulo visa reunir 30 estudantes em equipes de 6, cada uma orientada por mentores dedicados que falam português, para um fim de semana de aprendizado, programação e fortalecimento da comunidade.  <br /></p>

<p>As edições do Rails Girls São Paulo ocorreram de 2015 à 2019, introduzindo quase 300 estudantes locais ao Rails nesse período. Inspirada pela atual euforia na comunidade Rails e pelo retorno do Tropical.rb no Brasil, o evento está de volta com um novo formato voltado para mulheres que já possuem conhecimento básico em Rails e desejam aprimorar ainda mais suas habilidades e evoluir em suas carreiras. O objetivo é organizar dois eventos Rails Girls por ano no Brasil.  <br /></p>

<p>A educação é uma parte importante da missão da Rails Foundation e uma maneira de promover essa missão é apoiando organizações como o Rails Girls São Paulo e o Tropical.rb, que fazem um trabalho fantástico promovendo o Rails e introduzindo-o à novos públicos ao redor do mundo.  <br /></p>

<p>A Doximity foi a co-anfitriã perfeita para este evento: além de ser membro Core da Rails Foundation, eles têm uma forte cultura empresarial de mentoria e uma equipe de desenvolvedores baseada no Brasil que irá atuar como mentores durante esta edição do Rails Girls.  <br /></p>

<p>Para mais informações sobre Rails Girls São Paulo e para participar de próximas edições, visite: https://railsgirls.com.br.  <br /></p>

<p>Estamos ansiosos para encontrar todos em São Paulo. Até breve!  <br /></p>]]></content><author><name>Rails Foundation</name></author><category term="news" /><summary type="html"><![CDATA[(Portuguese below)]]></summary></entry></feed>