<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://rubyonrails.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rubyonrails.org/" rel="alternate" type="text/html" /><updated>2024-05-10T11:15:58+00:00</updated><id>https://rubyonrails.org/feed.xml</id><title type="html">Ruby on Rails</title><subtitle>A web-app framework that includes everything needed to create database-backed web applications according to the Model-View-Controller (MVC) pattern.</subtitle><entry><title type="html">Rails community survey, improved association validation errors and more</title><link href="https://rubyonrails.org/2024/5/10/this-week-in-rails" rel="alternate" type="text/html" title="Rails community survey, improved association validation errors and more" /><published>2024-05-10T00:00:00+00:00</published><updated>2024-05-10T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/5/10/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/5/10/this-week-in-rails"><![CDATA[<p>Hi, <a href="https://twitter.com/morgoth85">Wojtek</a> here. Let’s explore this week’s changes in the Rails.</p>

<p><a href="https://railsdeveloper.com/survey/">The bi-annual Rails community survey is live!</a><br />
Your input is invaluable and will help the team at Planet Argon gather insight on the current state of the Rails community. <a href="https://railsdeveloper.com/survey/">Fill in the survey here</a>. (And feel free to share with your teams).
The survey will remain open until August 2nd, 2024, and the findings released shortly thereafter.</p>

<p><a href="https://rubycentral.org/news/anewearforrubycentralevents/">A New Era for Ruby Central Events</a><br />
Ruby Central announced that 2025 will be the last year of <em>RailsConf</em> and they are inviting the community to vote on where the last edition should be held. <a href="https://rubycentral.org/news/anewearforrubycentralevents/">Read the full announcement here</a>, and cast your vote.</p>

<p><a href="https://github.com/rails/rails/pull/48727">Fix index_errors and provide :nested_attributes_order mode</a><br />
This indexes the association validation errors based on the order received by nested attributes setter, and respects the <em>reject_if</em> configuration.
This enables API to provide enough information to the frontend to map the validation errors back to their respective form fields.</p>

<p><a href="https://github.com/rails/rails/pull/51686">Add flag to speed up multi-process test runs</a><br />
Add <em>ENV[“SKIP_TEST_DATABASE_TRUNCATE”]</em> flag to speed up multi-process test runs on large databases, when all tests run within default transaction.
This cuts ~10 seconds from the test run of HEY when run by 24 processes against the 178 tables, since ~4,000 table truncates can then be skipped.</p>

<p><a href="https://github.com/rails/rails/pull/51770">Replace allocations count by GC time in request logs</a><br />
Allocations count is often an interesting proxy for performance, but not necessarily the most relevant thing to include in request logs, given they aren’t a per thread metric, so the reporting is widely inaccurate in multi-threaded environments.</p>

<p>Since Ruby 3.1 there is now <em>GC.total_time</em> which is a monotonically increasing counter of time spent in GC. It still isn’t really a per thread metric, but it is more interesting because it uses the same unit as the response time, allowing to better see when you have a GC pause performance issue.</p>

<p><a href="https://github.com/rails/rails/pull/51751">Explain that the default Dockerfile is intended for production</a><br />
If people want to use Docker in development, they’d need a radically different setup, and are likely much better served by dev containers.</p>

<p><a href="https://github.com/rails/rails/pull/51718">Don’t mess with Minitest unless RAILS_ENV is set</a><br />
Minitest will automatically scan all installed gems and load plugins from those gems.  We should detect whether or not we’re being run within the context of a Rails app and only change MT behavior in that case.</p>

<p><a href="https://github.com/rails/rails/pull/51571">Warn about changing “query_constraints” behavior</a><br />
Add a deprecation warning for the <em>query_constraints:</em> association option. This option will change behavior in the future versions of Rails and applications are encouraged to switch to <em>foreign_key:</em> to preserve the current behavior.</p>

<p><a href="https://github.com/rails/rails/pull/48585">Consistently use desired test adapter in Active Job</a><br />
All tests now respect the <em>active_job.queue_adapter</em> config, which previously was not always the case.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-05-03%7D...main@%7B2024-05-10%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240503-20240510">20 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Wojtek</name></author><category term="news" /><summary type="html"><![CDATA[Hi, Wojtek here. Let’s explore this week’s changes in the Rails.]]></summary></entry><entry><title type="html">Rails console improvements, assertionless tests reporting and more!</title><link href="https://rubyonrails.org/2024/5/3/this-week-in-rails" rel="alternate" type="text/html" title="Rails console improvements, assertionless tests reporting and more!" /><published>2024-05-03T00:00:00+00:00</published><updated>2024-05-03T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/5/3/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/5/3/this-week-in-rails"><![CDATA[<p>Hi, it’s <a href="https://greg.molnar.io">Greg</a>. Let’s explore this week’s changes in the Rails codebase.</p>

<p><a href="https://github.com/rails/rails/pull/51705">Build Rails console on top of IRB’s latest official APIs</a><br />
The Rails console is built on top of IRB, but due to the lack of an extension API, it was extending it with monkey patches. Since IRB received a lot of improvements and an extension API recently, this pull request changes the Rails console to be built on top of that. This will make the Rails helpers show up in the help message among others wins.</p>

<p><a href="https://github.com/rails/rails/pull/51690">Turn app:update into a command to add –force</a><br />
This pull request changes the <code class="language-plaintext highlighter-rouge">app:update</code> task to be a Rails command, and then adds the <code class="language-plaintext highlighter-rouge">--force</code> flag to it, to allow running <code class="language-plaintext highlighter-rouge">bin/rails app:update</code> while accepting all the changes it makes.</p>

<p><a href="https://github.com/rails/rails/pull/51655">Fix count queries on <code class="language-plaintext highlighter-rouge">includes+references</code> for models with composite primary keys</a><br />
Since SQLite and older MySQL do not support using <code class="language-plaintext highlighter-rouge">COUNT DISTINCT</code> with multiple columns, running a count query with composite primary keys caused an error. This pull request changes them to use a subquery.</p>

<p><a href="https://github.com/rails/rails/pull/51625">Allow assertionless tests to be reported</a><br />
It is very easy to write a “false positive” broken test that actually tests nothing (or can become such in the future). A simple example:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">test_active</span>
  <span class="n">active_users</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">active</span><span class="p">.</span><span class="nf">to_a</span>
  <span class="n">active_users</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span>
    <span class="n">assert</span> <span class="n">user</span><span class="p">.</span><span class="nf">active?</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>The assertion is only run if the scope returns at least one user. The change in this pull request allows to easily detect when such assertion is not run. 
With the following configuration, assertionless tests will be marked as failed and not silently pass.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">active_support</span><span class="p">.</span><span class="nf">assertionless_tests_behavior</span> <span class="o">=</span> <span class="ss">:raise</span> <span class="c1"># also available :ignore and :log</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51601">Add support for recursive common table expressions in ActiveRecord</a><br />
While Rails 7.1 has added support for writing Common Table Expressions(CTEs), this support does not extend to recursive CTEs.
This pull request adds a <code class="language-plaintext highlighter-rouge">QueryMethods#with_recursive</code> construct to enable recursive CTEs.</p>

<p><a href="https://github.com/rails/rails/pull/51483">Add a Date decoder to the PostgreSQL adapter </a><br />
This pull request adds a Date decoder to the PostgreSQL adapter to type cast dates at the connection level, so when a raw query is run, the columns will be cast to a date instead of a string. 
Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">connection</span><span class="p">.</span><span class="nf">select_value</span><span class="p">(</span><span class="s2">"select '2024-01-01'::date"</span><span class="p">).</span><span class="nf">class</span> 
<span class="c1">#=&gt; String</span>
</code></pre></div></div>
<p>After:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">connection</span><span class="p">.</span><span class="nf">select_value</span><span class="p">(</span><span class="s2">"select '2024-01-01'::date"</span><span class="p">).</span><span class="nf">class</span> 
<span class="c1">#=&gt;  Date </span>
</code></pre></div></div>

<p>This change brings the PostgreSQL adapter to parity (for dates) with the Mysql2 adapter.</p>

<p><a href="https://github.com/rails/rails/pull/49624">Remove all deprecated code</a><br />
All code deprecated in 7.1 is removed from the codebase in this pull request.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-04-26%7D...main@%7B2024-05-03%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240426-20240503">30 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Greg</name></author><category term="news" /><summary type="html"><![CDATA[Hi, it’s Greg. Let’s explore this week’s changes in the Rails codebase.]]></summary></entry><entry><title type="html">Rails World 2024 tickets on April 30, legacy index name format for Rails 7.0, etc</title><link href="https://rubyonrails.org/2024/4/26/this-week-in-rails" rel="alternate" type="text/html" title="Rails World 2024 tickets on April 30, legacy index name format for Rails 7.0, etc" /><published>2024-04-26T00:00:00+00:00</published><updated>2024-04-26T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/26/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/26/this-week-in-rails"><![CDATA[<p><a href="https://twitter.com/siaw23">Emmanuel Hayford</a> here, writing from Toruń, Poland.</p>

<p>We’ll keep this one short.</p>

<p>Tickets for this year’s Rails World will be available for purchase on Tuesday, April 30, 2024, at 1 PM EDT from the <a href="https://rubyonrails.org/world/2024">official Rails World site</a>. The Foundation has more information on tickets <a href="https://rubyonrails.org/2024/4/24/rails-world-tickets-on-sale-april-30">here</a>.</p>

<p>On to your weekly dose of Rails updates:</p>

<p><a href="https://github.com/rails/rails/pull/50837">Pre-7.1 Rails migrations use legacy index names when using rename_table</a><br />
This pull request ensures compatibility for Rails versions before 7.1 by retaining the legacy index name format. Beginning with version 7.1, Rails introduced a new index name format. Consequently, migrations containing rename_table might generate index names distinct from those created between Rails 7.0 and 7.1. A <a href="https://github.com/rails/rails/pull/47863">similar pull request</a> addressing migrations containing create_table was initiated last year.</p>

<p><a href="https://github.com/rails/rails/pull/51631">Support hexBinary type in XML</a><br />
This pull request introduces a hexBinary parser in XML. hexBinary stands out as one of the fundamental data types in XML that’s not included in Rails until this addition.</p>

<p><a href="https://github.com/rails/rails/pull/51638">Deprecate ActiveSupport::ProxyObject</a><br />
This pull request deprecates ActiveSupport::ProxyObject in favor of Ruby’s built-in BasicObject.</p>

<p><em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240419-20240426">31 contributors</a> to the Rails codebase this past week! You can view this week’s contributions in its entirety <a href="https://github.com/rails/rails/compare/@%7B2024-04-19%7D...main@%7B2024-04-26%7D">here</a>.</em></p>

<p>Take care.</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Emmanuel Hayford</name></author><category term="news" /><summary type="html"><![CDATA[Emmanuel Hayford here, writing from Toruń, Poland.]]></summary></entry><entry><title type="html">Rails World tickets releasing on April 30</title><link href="https://rubyonrails.org/2024/4/24/rails-world-tickets-on-sale-april-30" rel="alternate" type="text/html" title="Rails World tickets releasing on April 30" /><published>2024-04-24T00:00:00+00:00</published><updated>2024-04-24T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/24/rails-world-tickets-on-sale-april-30</id><content type="html" xml:base="https://rubyonrails.org/2024/4/24/rails-world-tickets-on-sale-april-30"><![CDATA[<p>Hi all,</p>

<p>Amanda here from the Rails Foundation.
We have a quick update about Rails World 2024 tickets.</p>

<p>Tickets will be available beginning <strong>Tuesday April 30</strong> at 1pm EDT.</p>

<p>General admission tickets are $559 USD. (This year we will not be issuing Early Bird tickets.)</p>

<p><strong>Good to know</strong>: To mitigate any potential rush for tickets, all speakers have been informed if they are invited to speak, and all sponsor and Rails Foundation member tickets have been set aside. We are hoping that this reduces the amount of people looking for a ticket at the same time, so if your company is sponsoring Rails World or is a member of the Rails Foundation, please ask internally for the booking process.</p>

<p>If there are any unclaimed sponsor or foundation tickets, we will release another small batch of tickets in late May.</p>

<p>Head over to <a href="https://rubyonrails.org/world/2024">rubyonrails.org/world/2024</a> on Tuesday to get your ticket.</p>

<p>Regards,</p>

<p>Amanda</p>

<p>Rails Foundation</p>

<p>PS: We are still accepting Rails World sponsors, so if your company would like to guarantee tickets for your team, please <a href="mailto:sponsors@rubyonrails.org">get in touch</a>.</p>]]></content><author><name>The Rails Foundation</name></author><category term="news" /><summary type="html"><![CDATA[Hi all,]]></summary></entry><entry><title type="html">makandra joins the Rails Foundation</title><link href="https://rubyonrails.org/2024/4/23/makandra-joins-rails-foundation" rel="alternate" type="text/html" title="makandra joins the Rails Foundation" /><published>2024-04-23T00:00:00+00:00</published><updated>2024-04-23T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/23/makandra-joins-rails-foundation</id><content type="html" xml:base="https://rubyonrails.org/2024/4/23/makandra-joins-rails-foundation"><![CDATA[<p>As we close the books on a busy Q1, the Rails Foundation is happy to welcome our newest Contributing member: <a href="https://makandra.de/">makandra</a>.</p>

<p style="text-align: center; margin-top: 20px"><img src="/assets/images/logo-makandra.svg" style="width: 50%" /></p>

<p>As the first German company to join the foundation, makandra brings with it over 15 years of building on Rails for large corporations such as Volkswagen and Audi to one-man companies such as Wissensbox.</p>

<blockquote>
  <p>Joining the Rails Foundation is a huge milestone for us and shows that we are fully behind Ruby on Rails. We are proud to be part of this community and we are determined to do our part to further develop and strengthen the framework.
<br /><br /><em>Thomas Eisenbarth, makandra CEO and Founder</em></p>
</blockquote>

<p>makandra has already spent years supporting the maintenance of the Rails ecosystem through their product, <a href="https://railslts.com/">Rails LTS</a>. When an older Rails version reaches end-of-life and stops receiving security updates, makandra patches vulnerabilities as soon as they are reported, extending the life of the older version and helping companies who are not yet able to fully upgrade to recent versions.</p>

<p>In addition to designing and developing their own <a href="https://github.com/makandra">open source projects</a>, makandra has a history of supporting the Rails ecosystem through <a href="https://makandracards.com/makandra">makandra cards</a>, a platform that documents and shares best practices, useful tips and tricks, and important lessons learned from working with Rails.</p>

<p>And, if you were lucky enough to catch one of the two editions, they were also one of the companies responsible for <a href="https://rubyonice.com/">Ruby on Ice</a>, which gathered Rails developers against a backdrop of the Alps in the south of Bavaria. Sessions, snow, and sleds? Sounds like the ultimate Ruby conference to us.</p>

<p>We thank makandra for supporting the Rails Foundation and the greater Rails community, and we look forward to collaborating on our mission!</p>

<p>–</p>

<p>makandra joins the Rails Foundation Core members <a href="https://cookpad.com/">Cookpad</a>, <a href="https://www.doximity.com/">Doximity</a>, <a href="https://www.fleetio.com/">Fleetio</a>, <a href="https://github.com/">GitHub</a>, <a href="https://www.intercom.com/">Intercom</a>, <a href="https://www.procore.com/">Procore</a>, <a href="https://www.shopify.com/">Shopify</a>, and <a href="https://37signals.com/">37signals</a>, and Contributing members <a href="https://www.appsignal.com/">AppSignal</a>, <a href="https://www.bigbinary.com/">BigBinary</a>, <a href="https://www.cedarcode.com/">Cedarcode</a>, <a href="https://www.planetargon.com/">Planet Argon</a>, and <a href="https://www.renuo.ch/">Renuo</a>.</p>

<p>The Rails Foundation couldn’t exist without the generous contributions from these Core and Contributing members. If your company would like to become involved, please reach out to <a href="mailto:foundation@rubyonrails.org">foundation@rubyonrails.org</a>. We’d love to hear from you.</p>]]></content><author><name>The Rails Foundation</name></author><category term="news" /><summary type="html"><![CDATA[As we close the books on a busy Q1, the Rails Foundation is happy to welcome our newest Contributing member: makandra.]]></summary></entry><entry><title type="html">ActiveRecord::Base#pluck accepts hash values, devcontainers improvements and more!</title><link href="https://rubyonrails.org/2024/4/19/this-week-in-rails" rel="alternate" type="text/html" title="ActiveRecord::Base#pluck accepts hash values, devcontainers improvements and more!" /><published>2024-04-19T00:00:00+00:00</published><updated>2024-04-19T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/19/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/19/this-week-in-rails"><![CDATA[<p>Hey everyone, Happy Friday! I hope you get some time to unwind and relax going into the weekend 😎</p>

<p><a href="https://www.saeloun.com/team/vipul">Vipul</a> here with the latest updates for This Week in Rails. Let’s dive in.</p>

<p><a href="https://github.com/rails/rails/pull/51565">Allow ActiveRecord::Base#pluck to accept hash values</a><br />
This change adds support for  <code class="language-plaintext highlighter-rouge">ActiveRecord::Base#pluck</code> to accept hash values.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">pluck</span><span class="p">(</span><span class="s2">"posts.id"</span><span class="p">,</span> <span class="s2">"comments.id"</span><span class="p">,</span> <span class="s2">"comments.body"</span><span class="p">)</span>

<span class="c1"># After</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">pluck</span><span class="p">(</span><span class="ss">posts: </span><span class="p">[</span><span class="ss">:id</span><span class="p">],</span> <span class="ss">comments: </span><span class="p">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:body</span><span class="p">])</span>
</code></pre></div></div>

<p>The same applies to <code class="language-plaintext highlighter-rouge">.pick</code>, which is implemented using <code class="language-plaintext highlighter-rouge">.pluck</code>.</p>

<p><a href="https://github.com/rails/rails/pull/48785">Fix child association loading in :n_plus_one_only mode</a>   <br />
Strict loading in <code class="language-plaintext highlighter-rouge">:n_plus_one_only</code> mode is designed to prevent performance issues when deeply traversing associations. 
It allows <code class="language-plaintext highlighter-rouge">Person.find(1).posts</code>, but not <code class="language-plaintext highlighter-rouge">Person.find(1).posts.map(&amp;:category)</code>. 
This fix avoids the surprise that occurs when <code class="language-plaintext highlighter-rouge">person.posts.first</code> eagerly loads the whole association rather than allowing the user to manage the child association.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">person</span><span class="p">.</span><span class="nf">strict_loading!</span><span class="p">(</span><span class="ss">mode: :n_plus_one_only</span><span class="p">)</span>

<span class="c1"># Before</span>
<span class="n">person</span><span class="p">.</span><span class="nf">posts</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># SELECT * FROM posts WHERE person_id = 1; -- non-deterministic order</span>

<span class="c1"># After</span>
<span class="n">person</span><span class="p">.</span><span class="nf">posts</span><span class="p">.</span><span class="nf">first</span> <span class="c1"># this is 1+1, not N+1</span>
<span class="c1"># SELECT * FROM posts WHERE person_id = 1 ORDER BY id LIMIT 1;</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/49267">Add save_and_open_page helper to IntegrationTest</a>  <br />
<code class="language-plaintext highlighter-rouge">save_and_open_page</code> is a capybara helper that lets developers inspect the status of the page at any given point in their tests.
This change adds <code class="language-plaintext highlighter-rouge">save_and_open_page</code> helper support to allow using them from within system tests.</p>

<p><a href="https://github.com/rails/rails/pull/51588">Change devcontainer.json to forward used ports for the project</a><br />
Currently the generated <code class="language-plaintext highlighter-rouge">devcontainer.json</code> file does not forward the ports required for the project, so we might need to manually change it in order to access the project when running via <code class="language-plaintext highlighter-rouge">devcontainer</code>.
This PR adds the required forwarding for the project by default.</p>

<p><a href="https://github.com/rails/rails/pull/51520">Add node and yarn to devcontainer when creating a project with Javascript</a><br />
Currently when creating a rails project with javascript (–javascript=esbuild for example) neither node or yarn are added to the devcontainer. 
This change adds both when needed.</p>

<p><a href="https://github.com/rails/rails/pull/51563">Fix typo in Feature Policy for idle-detection</a><br />
This change fixes a small typo in feature policy <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy/idle-detection"><code class="language-plaintext highlighter-rouge">idle-detection</code></a> and not <code class="language-plaintext highlighter-rouge">idle_detection</code> which was leading to this policy not being applied before.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-04-13%7D...main@%7B2024-04-19%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240413-20240419">17 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>vipulnsward</name></author><category term="news" /><summary type="html"><![CDATA[Hey everyone, Happy Friday! I hope you get some time to unwind and relax going into the weekend 😎]]></summary></entry><entry><title type="html">A week of fixes</title><link href="https://rubyonrails.org/2024/4/12/this-week-in-rails" rel="alternate" type="text/html" title="A week of fixes" /><published>2024-04-12T00:00:00+00:00</published><updated>2024-04-12T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/12/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/12/this-week-in-rails"><![CDATA[<p>Hi, it’s <a href="https://greg.molnar.io">Greg</a>. Let’s explore this week’s changes in the Rails codebase.</p>

<p><a href="https://github.com/rails/rails/pull/51549">Fix union select parentheses</a><br />
When building <code class="language-plaintext highlighter-rouge">UNION</code> or <code class="language-plaintext highlighter-rouge">UNION ALL</code> queries involving <code class="language-plaintext highlighter-rouge">LIMIT</code> or <code class="language-plaintext highlighter-rouge">ORDER BY</code>, Arel generated invalid SQL previously. This pull request changes <code class="language-plaintext highlighter-rouge">Arel::Visitors::ToSql</code> so that <code class="language-plaintext highlighter-rouge">SELECT</code> statements in <code class="language-plaintext highlighter-rouge">Union</code> and <code class="language-plaintext highlighter-rouge">UnionAll</code> nodes are enclosed in parentheses to avoid syntax errors.</p>

<p><a href="https://github.com/rails/rails/pull/51531">Fix copying virtual columns when altering a table in SQLite3</a><br />
When Rails alters a SQLite table, it creates a new table and copies the structure and data from the old one.<br />
The problem is that virtual columns are incorrectly copied (copied as classic columns). This pull request fixes that.</p>

<p><a href="https://github.com/rails/rails/pull/51525">Fix <strong>ActiveJob::EnqueueAfterTransactionCommit</strong> API</a><br />
<code class="language-plaintext highlighter-rouge">perform_later</code> is supposed to return the <code class="language-plaintext highlighter-rouge">Job</code> instance on success, and <code class="language-plaintext highlighter-rouge">false</code> on error. When the enqueue is automatically delayed, it is of course impossible to predict if the actual queueing will succeed, but for backward compatibility reasons, it is best to assume it will.<br />
If necessary, you can hold onto the job instance and check for <code class="language-plaintext highlighter-rouge">#successfully_enqueued?</code> after the transaction has completed.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-04-05%7D...main@%7B2024-04-12%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240405-20240412">31 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Greg</name></author><category term="news" /><summary type="html"><![CDATA[Hi, it’s Greg. Let’s explore this week’s changes in the Rails codebase.]]></summary></entry><entry><title type="html">Deferring jobs enqueueing to after the transaction commit, queries count in rendering logs and more</title><link href="https://rubyonrails.org/2024/4/5/this-week-in-rails" rel="alternate" type="text/html" title="Deferring jobs enqueueing to after the transaction commit, queries count in rendering logs and more" /><published>2024-04-05T00:00:00+00:00</published><updated>2024-04-05T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/4/5/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/4/5/this-week-in-rails"><![CDATA[<p>Hi, <a href="https://twitter.com/morgoth85">Wojtek</a> here exploring this week’s changes.</p>

<p><a href="https://rubyonrails.org/world/2024">Rails World 2024 edition website is now live</a><br />
With tickets going on sale in April.</p>

<p><a href="https://github.com/rails/rails/pull/51474">Allow to register transaction callbacks outside of a record</a><br />
<em>ActiveRecord::Base.transaction</em> now yields an <em>ActiveRecord::Transaction</em> object, which allows to register callbacks on it.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Article</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span> <span class="o">|</span><span class="n">transaction</span><span class="o">|</span>
  <span class="n">article</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="ss">published: </span><span class="kp">true</span><span class="p">)</span>
  <span class="n">transaction</span><span class="p">.</span><span class="nf">after_commit</span> <span class="k">do</span>
    <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Added <em>ActiveRecord::Base.current_transaction</em> which also allows to register callbacks on it.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Article</span><span class="p">.</span><span class="nf">current_transaction</span><span class="p">.</span><span class="nf">after_commit</span> <span class="k">do</span>
  <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Add <em>ActiveRecord.after_all_transactions_commit</em> callback.</p>

<p>Useful for code that may run either inside or outside a transaction and needs to perform work after the state changes have been properly persisted.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">publish_article</span><span class="p">(</span><span class="n">article</span><span class="p">)</span>
  <span class="n">article</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="ss">published: </span><span class="kp">true</span><span class="p">)</span>
  <span class="no">ActiveRecord</span><span class="p">.</span><span class="nf">after_all_transactions_commit</span> <span class="k">do</span>
    <span class="no">PublishNotificationMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">article: </span><span class="n">article</span><span class="p">).</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51426">Automatically delay Active Job enqueues to after commit</a><br />
A common mistake with Active Job is to enqueue jobs from inside a transaction, causing them to potentially be picked and ran by another process, before the transaction is committed, which result in various errors.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Topic</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
  <span class="n">topic</span> <span class="o">=</span> <span class="no">Topic</span><span class="p">.</span><span class="nf">create</span>
  <span class="no">NewTopicNotificationJob</span><span class="p">.</span><span class="nf">perform_later</span><span class="p">(</span><span class="n">topic</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Now Active Job will automatically defer the enqueuing to after the transaction is committed, and drop the job if the transaction is rolled back.</p>

<p>Various queue implementations can choose to disable this behavior, and users can disable it, or force it on a per job basis:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">NewTopicNotificationJob</span> <span class="o">&lt;</span> <span class="no">ApplicationJob</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">enqueue_after_transaction_commit</span> <span class="o">=</span> <span class="ss">:never</span> <span class="c1"># or :always or :default</span>
<span class="k">end</span>
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51457">Add queries count to template rendering instrumentation</a><br />
There is often a need to quickly see how many SQL queries the current action produced. For example, to quickly check if N+1 was solved or if the caching is working and so the number of queries reduced etc. This can be done manually by inspecting the logs and counting the number of queries, but for largish actions with tens-hundreds of SQL queries this is not a simple task.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Before
Completed 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms | Allocations: 112788)
# After
Completed 200 OK in 3804ms (Views: 41.0ms | ActiveRecord: 33.5ms (2 queries, 1 cached) | Allocations: 112788)
</code></pre></div></div>

<p><a href="https://github.com/rails/rails/pull/51453">Add the ability to ignore counter cache columns while they are backfilling</a><br />
Starting to use counter caches on existing large tables can be troublesome, because the column values must be backfilled separately of the column addition (to not lock the table for too long) and before the use of <em>:counter_cache</em> (otherwise methods like <em>size/any?</em>, which use counter caches internally, can produce incorrect results). People usually use database triggers or callbacks on child associations while backfilling before introducing a counter cache configuration to the association.</p>

<p>Now, to safely backfill the column, while keeping the column updated with child records added/removed, use:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">belongs_to</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">counter_cache: </span><span class="p">{</span> <span class="ss">active: </span><span class="kp">false</span> <span class="p">}</span>
<span class="k">end</span>
</code></pre></div></div>

<p>While the counter cache is not “active”, the methods like <em>size/any?</em> will not use it, but get the results directly from the database. After the counter cache column is backfilled, simply remove the <em>{ active: false }</em> part from the counter cache definition, and it will now be used by the mentioned methods.</p>

<p><a href="https://github.com/rails/rails/pull/50941">Retry Actionable Error when running tests</a><br />
Allow Actionable Errors encountered when running tests to be retried. This feature will only be present on interactive terminals.</p>

<p><a href="https://github.com/rails/rails/pull/51478">Raise named exception when database reports an invalid version</a><br />
When the MySQL database returns an invalid version string the <em>ActiveRecord::ActiveRecordError</em> error will now be raised.</p>

<p><a href="https://github.com/rails/rails/pull/51447">Make ActiveSupport::BacktraceCleaner copy filters and silencers on dup and clone</a><br />
 Previously the copy would still share the internal silencers and filters array, causing state to leak.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-29%7D...main@%7B2024-04-05%7D">here</a>.</em>
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240329-20240405">16 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>Wojtek</name></author><category term="news" /><summary type="html"><![CDATA[Hi, Wojtek here exploring this week’s changes.]]></summary></entry><entry><title type="html">Retry known idempotent SELECT queries, New Active Record configuration option, and more!</title><link href="https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401" rel="alternate" type="text/html" title="Retry known idempotent SELECT queries, New Active Record configuration option, and more!" /><published>2024-03-29T00:00:00+00:00</published><updated>2024-03-29T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401</id><content type="html" xml:base="https://rubyonrails.org/2024/3/29/this-week-in-rails-retry-known-idempotent-select-queries-new-active-record-configuration-option-and-more-b3dfc401"><![CDATA[<p>Greetings! I’m <a href="https://twitter.com/siaw23">Emmanuel Hayford</a>, here to bring you your weekly instalment of “This Week In Rails”. Let’s dive straight into it.
 
Two new guides are now open for community review. If you are well versed in Action View, partials, and helpers, please review and submit your feedback here:</p>

<ul>
  <li><a href="https://github.com/rails/rails/pull/51435">Action View Overview PR</a></li>
  <li><a href="https://github.com/rails/rails/pull/51432">Action View Helpers PR</a></li>
</ul>

<p><a href="https://github.com/rails/rails/pull/51349">Add config.active_record.permanent_connection_checkout setting</a><br />
This setting determines the action taken when <em>ActiveRecord::Base.connection</em> is accessed: whether it raises an error, emits a deprecation warning, or does nothing.</p>

<p><em>ActiveRecord::Base.connection</em> acquires a database connection from the pool and maintains it until the request or job concludes. However, this behaviour may prove undesirable in environments with more threads or fibers than available connections.</p>

<p>This configuration facilitates the identification and elimination of code utilising <em>ActiveRecord::Base.connection</em>, encouraging migration to <em>ActiveRecord::Base.with_connection</em> instead. The default behaviour remains unaltered.</p>

<p><a href="https://github.com/rails/rails/pull/51447">Make ActiveSupport::BacktraceCleaner copy filters on dup</a><br />
Enhance <em>ActiveSupport::BacktraceCleaner</em> to replicate filters and silencers during duplication and cloning.</p>

<p>Previously, duplication still resulted in shared internal silencers and filters arrays, leading to state leakage.</p>

<p><a href="https://github.com/rails/rails/pull/51408">Ensure necessary options are added to association options</a><br />
Noting the typo in <em>:through</em>, take the following code sample as an example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
    <span class="n">has_many</span> <span class="ss">:courses</span>
    <span class="n">has_many</span> <span class="ss">:assignments</span><span class="p">,</span> <span class="ss">trough: :courses</span>
<span class="k">end</span>
</code></pre></div></div>

<p>You’d get a misleading error along the lines of</p>

<p>“Unknown key: :trough. Valid keys are: :class_name, :anonymous_class, :primary_key, …, :index_errors (ArgumentError)”,</p>

<p>with this pull request, you’ll now get a clearer message, more like:</p>

<p>“Unknown key: :trough. Valid keys are: :class_name, :anonymous_class, :primary_key, …, :index_errors, :through (ArgumentError)”.</p>

<p>Note that in the second error message <em>:through</em> is included in the list of valid options.</p>

<p><a href="https://github.com/rails/rails/pull/51336">Retry known idempotent SELECT queries on connection-related exceptions</a><br />
Implements a mechanism to automatically retry <em>SELECT</em> queries that are known to be idempotent in the event of connection-related exceptions.</p>

<p>Queries constructed through Arel tree traversal or based on known model attributes are inherently idempotent and can be safely retried upon encountering a connection error. Previously, certain adapters like <em>TrilogyAdapter</em> would raise <em>ActiveRecord::ConnectionFailed: Trilogy::EOFError</em> when faced with a connection error during a request.</p>

<p>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240322-20240329">22 contributors</a> to the Rails codebase this past week!</p>

<p>Take care.</p>

<p>Your weekly inside scoop of interesting commits, pull requests and more from <a href="https://github.com/rails/rails"><strong>Rails</strong></a>.</p>

<p><i><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</i></p>]]></content><author><name>Emmanuel Hayford</name></author><category term="news" /><summary type="html"><![CDATA[Greetings! I’m Emmanuel Hayford, here to bring you your weekly instalment of “This Week In Rails”. Let’s dive straight into it.   Two new guides are now open for community review. If you are well versed in Action View, partials, and helpers, please review and submit your feedback here:]]></summary></entry><entry><title type="html">Rails guides facelift, two new official gems and more!</title><link href="https://rubyonrails.org/2024/3/22/this-week-in-rails" rel="alternate" type="text/html" title="Rails guides facelift, two new official gems and more!" /><published>2024-03-22T00:00:00+00:00</published><updated>2024-03-22T00:00:00+00:00</updated><id>https://rubyonrails.org/2024/3/22/this-week-in-rails</id><content type="html" xml:base="https://rubyonrails.org/2024/3/22/this-week-in-rails"><![CDATA[<p>Hey everyone, Happy Weekend!<br />
<a href="https://www.saeloun.com/team/vipul">Vipul</a> here with the latest updates for This Week in Rails. Let’s dive in.</p>

<p><a href="https://rubyonrails.org/2024/3/20/rails-guides-get-a-facelift">Rails guides gets a facelift</a> <br />
Rails guides has a received a big design update!<br />
Check out the <a href="https://edgeguides.rubyonrails.org/">Edge Guides</a> to see these changes.
If you find a bug or wish to submit a suggestion, you can open a discussion on <a href="https://github.com/rails/rails/discussions">GitHub</a>.</p>

<p><a href="https://twitter.com/dhh/status/1770590629149786189">Two new official gems</a><br />
<a href="https://github.com/rails/solid_queue">Solid Queue</a>, a DB-based queuing backend for Active Job, has graduated to an official <a href="https://twitter.com/dhh/status/1770590629149786189">Rails gem</a>.</p>

<p><a href="https://twitter.com/dhh/status/1770590866492809229">Same</a> for <a href="https://github.com/rails/mission_control-jobs">Mission Control — Jobs</a>, 
which provides a Rails-based frontend to Active Job adapters. 
It currently supports Resque and Solid Queue.</p>

<p><a href="https://github.com/rails/rails/pull/51351">Don’t enqueue jobs to process a preview image if no variant requires it</a><br />
This PR fixes the issue where previewable attachments that don’t specify any variants, or no variants that require pre-processing, 
were still attempting to queue a job to process the preview image anyways.</p>

<p><a href="https://github.com/rails/rails/pull/51353">Eliminate remaining uses of lease_connection inside Active Record</a><br />
As part of moving towards adding a <a href="https://github.com/rails/rails/pull/51349">new <code class="language-plaintext highlighter-rouge">config.active_record.permanent_connection_checkout</code> setting</a>, 
this change eliminates the remaining uses of <code class="language-plaintext highlighter-rouge">lease_connection</code> inside Active Record API.</p>

<p><a href="https://github.com/rails/rails/pull/51308">Do not build View Watcher until the first updated? check</a><br />
Currently initialization of every <code class="language-plaintext highlighter-rouge">Rails::Engine</code> leads to the creation of a new View watcher when the engine prepends its paths.
This contributes to the time it takes to perform the first cold request on a lazy loaded application.
This change delays the initialization of the View watcher until its first usage to only have one initialization of the watcher.</p>

<p><a href="https://github.com/rails/rails/pull/51345">Allow primary_key: association option to be composite </a><br />
Association’s <code class="language-plaintext highlighter-rouge">primary_key</code> can be composite when derived from associated class’s <code class="language-plaintext highlighter-rouge">primary_key</code> or <code class="language-plaintext highlighter-rouge">query_constraints</code>. 
Rails dint allow setting this explicitly even though it was already capable of supporting it.</p>

<p>This commit allows <code class="language-plaintext highlighter-rouge">primary_key</code> association option to be an array to support this behavior.</p>

<p><em>You can view the whole list of changes <a href="https://github.com/rails/rails/compare/@%7B2024-03-16%7D...main@%7B2024-03-22%7D">here</a>.</em><br />
<em>We had <a href="https://contributors.rubyonrails.org/contributors/in-time-window/20240316-20240322">14 contributors</a> to the Rails codebase this past week!</em></p>

<p>Until next time!</p>

<p><em><a href="https://world.hey.com/this.week.in.rails">Subscribe</a> to get these updates mailed to you.</em></p>]]></content><author><name>vipulnsward</name></author><category term="news" /><summary type="html"><![CDATA[Hey everyone, Happy Weekend! Vipul here with the latest updates for This Week in Rails. Let’s dive in.]]></summary></entry></feed>