# [NewsFiler v2] NewsPaper: Guillaume Laforge - Medium (this should go in the Entries as of v2)
# [NewsFiler v2] GUID: https://medium.com/p/11a70245017d
# [NewsFiler v2] entries.keys: ["title", "url", "author", "categories", "published", "entry_id", "content"]
--- !ruby/object:Feedjira::Parser::RSSEntry
title: 'Tech Watch #3 — October, 20, 2023'
url: https://glaforge.medium.com/tech-watch-3-october-20-2023-11a70245017d?source=rss-431147437aeb------2
author: Guillaume Laforge
categories:
- technology
- unicode
- java
- llm
- groovy
published: 2023-10-20 19:49:34.000000000 Z
entry_id: !ruby/object:Feedjira::Parser::GloballyUniqueIdentifier
  is_perma_link: 'false'
  guid: https://medium.com/p/11a70245017d
carlessian_info:
  news_filer_version: 2
  newspaper: Guillaume Laforge - Medium
  macro_region: Blogs
rss_fields:
- title
- url
- author
- categories
- published
- entry_id
- content
content: '<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*R11l0mdYmdHwQkT2PgRidQ.png"
  /></figure><h3>Tech Watch #3 — October, 20, 2023</h3><ul><li><a href="https://horstmann.com/unblog/2023-10-03/index.html">Stop
  Using char in Java. And Code Points</a><br>It’s a can of worms, when you start messing
  with chars, code points, and you’re likely going to get it wrong in the end. As
  much as possible, stay away from chars and code points, and instead, use as much
  as possible the String methods like indexOf() / substring(), and some regex when
  you really need to find grapheme clusters.</li><li>Paul King shared his presentations
  on <a href="https://speakerdeck.com/paulk/groovy-today">Why use Groovy in 2023</a>
  and an <a href="https://speakerdeck.com/paulk/groovy-roadmap">update on the Groovy
  5 roadmap</a>It’s interesting to see how and where Groovy goes beyond what is offered
  by Java, sometimes thanks to its dynamic nature, sometimes because of its compile-time
  transformation capabilities. When Groovy adopts the latest Java features, there’s
  always a twist to make things even groovier in Groovy!</li><li><a href="https://blog.scottlogic.com/2023/10/18/the-state-of-webassembly-2023.html">The
  State of WebAssembly in 2023</a><br>I often enjoy the articles from the folks at
  Scott Logic. This one is about a survey they ran on the topic of WebAssembly. Languages
  like Rust and JavaScript are seeing increased usage (for targeting wasm). Wasm is
  used a lot for web app development, but serverless seems to be he second most common
  use case, as well as for hosting plugin environments. The survey also mentions that
  threads, garbage collection and the new component model are the features developer
  are most interested in. For WASI, all the I/O related proposals like HTTP, filesystem
  support, sockets, are the ones developers want (although WASIX which covered this
  area received mixed reactions).</li><li><a href="https://arstechnica.com/information-technology/2023/09/telling-ai-model-to-take-a-deep-breath-causes-math-scores-to-soar-in-study/">Tell
  your LLM to take a deep breath!</a><br>We tend to humanize large language models
  via <a href="https://en.wikipedia.org/wiki/Anthropomorphism">anthropomorphism</a>,
  as much as we see human faces in anything like with <a href="https://en.wikipedia.org/wiki/Pareidolia">pareildolia</a>,
  although LLMs are neither sentients nor human. So it’s pretty ironic that to get
  a better result in some logic problem solving, we need to tell the LLM to actually
  take a deep breath! Are they now able to breathe?</li><li><a href="https://hackerone.com/reports/2199174">Wannabe
  security researcher asks Bard for vulnerabilities in cURL</a><br>Large Language
  Models can be super creative, that’s why we employ them to imagine new stories,
  create narratives, etc. And it seems wannabe security experts believe that what
  LLMs say is pure facts, probably what happened to this person that reported that
  they asked Bard to find a vulnerability in cURL! And Bard indeed managed to be creative
  enough to craft an hypothetical exploit, even explaining where a possible integer
  overflow could take place. Unfortunately, the generated exploit text contained many
  errors (wrong method signature, invented changelog, code that doesn’t compile, etc.)</li><li><a
  href="https://www.beren.io/2023-03-19-LLMs-confabulate-not-hallucinate/">LLMs confabulate,
  they don’t hallucinate</a><br>A few times, I’ve seen this mention on social networks
  about the fact we should say that LLM confabulate, instead of hallucinate. Confabulation
  is usually a brain disorder that makes people confidently tell things that may be
  true or not, in a convincing fashion (they don’t even know it’s false or a lie).
  Hallucination is more of a misinterpretation of the sensory input, like having the
  impression to see a pink elephant! The article linked above explains the rationale.</li><li>Greg
  Kamradt tweets about the <a href="https://twitter.com/GregKamradt/status/1711772496159252981">use
  cases for multimodal vision+text LLMs</a><br>You’d think that you could just get
  a model that describes a picture as a text, and then mix that description with other
  text snippets. But models that really fully understand both images and texts are
  way more powerful than this. In this tweet, Greg distinguishes different scenarios:
  description, interpretation, recommendation, convertion, extraction, assistance
  and evaluatation. For example, we could imagine transforming an architecture diagram
  into a proper Terraform YAML file, or a UI mockup into a snippet of code that builds
  that UI for real. You You could show a picture of a dish, and ask for its recipe!</li><li><a
  href="https://blog.jetbrains.com/blog/2023/10/16/ai-graphics-at-jetbrains-story/">The
  Story of AI Graphics at JetBrains</a><br>I’ve always loved generative and procedural
  art, both for games and indeed for art. I really enjoyed this article which is going
  through the story of how they are generating their nice splash screens and animations
  for the JetBrains family of products. Neural networks at play here!</li></ul><img
  src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=11a70245017d"
  width="1" height="1" alt="">'
